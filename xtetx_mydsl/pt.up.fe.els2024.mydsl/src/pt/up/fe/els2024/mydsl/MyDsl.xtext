grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

generate myDsl "http://www.xtext.org/example/mydsl/MyDsl"

Model:
    operations+=TopLevelOperation+;

TopLevelOperation:
    LoadOperation | SelectOperation | ConcatOperation | SaveOperation |
    PrintOperation | RenameOperation | LimitOperation |
    ArgMaxOperation | ArgMinOperation | DropOperation | FilterOperation | ProcessFoldersOperation;

LoadOperation:
    LoadJSON | LoadXML | LoadYAML;

LoadJSON:
    '.loadJSON()'
    '.from(' file=STRING ')'
    '.into(' table=STRING ')'
    ('.withAttributes(' attributes+=STRING (',' attributes+=STRING)* ')')?
    ('.nestedIn(' nested+=STRING (',' nested+=STRING)* ')')?;

LoadXML:
    '.loadXML()'
    '.from(' file=STRING ')'
    '.into(' table=STRING ')'
    ('.nestedIn(' nested+=STRING (',' nested+=STRING)* ')')?;

LoadYAML:
    '.loadYAML()'
    '.from(' file=STRING ')'
    '.into(' table=STRING ')'
    ('.nestedIn(' nested+=STRING (',' nested+=STRING)* ')')?;

ConcatOperation:
    '.concatHorizontal()'
    '.toTable(' target=STRING ')'
    '.onTables(' tables+=STRING (',' tables+=STRING)* ')';

FilterOperation:
    '.filter()'
    '.onColumn(' column=STRING ')'
    '.onTable(' table=STRING ')'
    '.where(' condition=STRING 'value' value=STRING ('toTable' target=STRING)? ')';

SaveOperation:
    '.save()'
    '.tables(' tables+=STRING (',' tables+=STRING)* ')'
    '.to(' file=STRING ')'
    '.as(' format=STRING ')';

PrintOperation:
    {PrintOperation} PrintAll | PrintTable;

PrintAll:
    '.printAll()';

PrintTable:
    '.printTable(' table=STRING ')';

RenameOperation:
    '.renameColumn()'
    '.from(' original=STRING ')'
    '.to(' renamed=STRING ')'
    '.onTable(' table=STRING ')';

LimitOperation:
    '.limit()'
    '.table(' table=STRING ')'
    '.from(' start=INT ')'
    '.to(' end=INT ')';

ArgMaxOperation:
    '.selectMax()'
    '.onColumn(' column=STRING ')'
    '.onTable(' table=STRING ')'
    '.toTable(' target=STRING ')';

ArgMinOperation:
    '.selectMin()'
    '.onColumn(' column=STRING ')'
    '.onTable(' table=STRING ')'
    '.toTable(' target=STRING ')';

SelectOperation:
    '.select()'
    '.columns(' columns+=STRING (',' columns+=STRING)* ')'
    '.fromTable(' table=STRING ')'
    '.toTable(' target=STRING ')';

DropOperation:
    '.dropTable(' table=STRING ')';

ProcessFoldersOperation:
    '.processFolders(' folders+=STRING (',' folders+=STRING)* ')'
    '.with' '{' folderOperations+=TopLevelOperation+ '}';