/**
 * generated by Xtext 2.37.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.mydsl.myDsl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyDslFactoryImpl extends EFactoryImpl implements MyDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MyDslFactory init()
  {
    try
    {
      MyDslFactory theMyDslFactory = (MyDslFactory)EPackage.Registry.INSTANCE.getEFactory(MyDslPackage.eNS_URI);
      if (theMyDslFactory != null)
      {
        return theMyDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MyDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MyDslPackage.MODEL: return createModel();
      case MyDslPackage.TOP_LEVEL_OPERATION: return createTopLevelOperation();
      case MyDslPackage.LOAD_OPERATION: return createLoadOperation();
      case MyDslPackage.LOAD_JSON: return createLoadJSON();
      case MyDslPackage.LOAD_XML: return createLoadXML();
      case MyDslPackage.LOAD_YAML: return createLoadYAML();
      case MyDslPackage.SELECT_OPERATION: return createSelectOperation();
      case MyDslPackage.CONCAT_OPERATION: return createConcatOperation();
      case MyDslPackage.FILTER_OPERATION: return createFilterOperation();
      case MyDslPackage.SAVE_OPERATION: return createSaveOperation();
      case MyDslPackage.PRINT_OPERATION: return createPrintOperation();
      case MyDslPackage.PRINT_TABLE: return createPrintTable();
      case MyDslPackage.RENAME_OPERATION: return createRenameOperation();
      case MyDslPackage.LIMIT_OPERATION: return createLimitOperation();
      case MyDslPackage.ARG_MAX_OPERATION: return createArgMaxOperation();
      case MyDslPackage.ARG_MIN_OPERATION: return createArgMinOperation();
      case MyDslPackage.DROP_OPERATION: return createDropOperation();
      case MyDslPackage.PROCESS_FOLDERS_OPERATION: return createProcessFoldersOperation();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TopLevelOperation createTopLevelOperation()
  {
    TopLevelOperationImpl topLevelOperation = new TopLevelOperationImpl();
    return topLevelOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LoadOperation createLoadOperation()
  {
    LoadOperationImpl loadOperation = new LoadOperationImpl();
    return loadOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LoadJSON createLoadJSON()
  {
    LoadJSONImpl loadJSON = new LoadJSONImpl();
    return loadJSON;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LoadXML createLoadXML()
  {
    LoadXMLImpl loadXML = new LoadXMLImpl();
    return loadXML;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LoadYAML createLoadYAML()
  {
    LoadYAMLImpl loadYAML = new LoadYAMLImpl();
    return loadYAML;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SelectOperation createSelectOperation()
  {
    SelectOperationImpl selectOperation = new SelectOperationImpl();
    return selectOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ConcatOperation createConcatOperation()
  {
    ConcatOperationImpl concatOperation = new ConcatOperationImpl();
    return concatOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FilterOperation createFilterOperation()
  {
    FilterOperationImpl filterOperation = new FilterOperationImpl();
    return filterOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SaveOperation createSaveOperation()
  {
    SaveOperationImpl saveOperation = new SaveOperationImpl();
    return saveOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PrintOperation createPrintOperation()
  {
    PrintOperationImpl printOperation = new PrintOperationImpl();
    return printOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PrintTable createPrintTable()
  {
    PrintTableImpl printTable = new PrintTableImpl();
    return printTable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RenameOperation createRenameOperation()
  {
    RenameOperationImpl renameOperation = new RenameOperationImpl();
    return renameOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LimitOperation createLimitOperation()
  {
    LimitOperationImpl limitOperation = new LimitOperationImpl();
    return limitOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArgMaxOperation createArgMaxOperation()
  {
    ArgMaxOperationImpl argMaxOperation = new ArgMaxOperationImpl();
    return argMaxOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArgMinOperation createArgMinOperation()
  {
    ArgMinOperationImpl argMinOperation = new ArgMinOperationImpl();
    return argMinOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DropOperation createDropOperation()
  {
    DropOperationImpl dropOperation = new DropOperationImpl();
    return dropOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProcessFoldersOperation createProcessFoldersOperation()
  {
    ProcessFoldersOperationImpl processFoldersOperation = new ProcessFoldersOperationImpl();
    return processFoldersOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyDslPackage getMyDslPackage()
  {
    return (MyDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MyDslPackage getPackage()
  {
    return MyDslPackage.eINSTANCE;
  }

} //MyDslFactoryImpl
